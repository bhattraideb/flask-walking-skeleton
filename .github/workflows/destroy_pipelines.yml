# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
# https://gist.github.com/soof-golan/6ebb97a792ccd87816c0bda1e6e8b8c2

name: Destroy AWS Resources

on:
  workflow_dispatch:

jobs:
  DestroyAWSResources:
    name: 'Destroy'
#    needs: [build]
    runs-on: ubuntu-latest
    environment: production
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Add profile credentials to ~/.aws/credentials
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} --profile tf-user-for-test
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --profile tf-user-for-test
        aws configure set aws_region ${{ secrets.AWS_DEFAULT_REGION }} --profile tf-user-for-test
        
    # Terraform Destroy
    - name: Terraform Destroy
#      if: ${{ github.event.inputs.action == 'Terraform_destroy' }}
      run: |
        cd terraform
        terraform init --reconfigure
        terraform destroy -auto-approve